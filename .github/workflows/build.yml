name: Video Push

on: [workflow_dispatch, repository_dispatch]

jobs:
  build:
    runs-on: ubuntu-latest
    if: github.event.repository.owner.id == github.event.sender.id

    steps: 
      - name: Checkout source
        uses: actions/checkout@v2
      
      - name: Install dependence
        run: |
            wget -q https://github.com/BtbN/FFmpeg-Builds/releases/download/latest/ffmpeg-master-latest-linux64-gpl.tar.xz
            tar xf ffmpeg-master-latest-linux64-gpl.tar.xz && rm ffmpeg-master-latest-linux64-gpl.tar.xz
            sudo mv ffmpeg-master-latest-linux64-gpl/bin/* /usr/local/bin && rm -rf ffmpeg-master-latest-linux64-gpl
            pip install -r requirements.txt
            python3 aria2/add_tracker.py

      - name: Get Video Info
        run: |
            python3 sht.py

      - name: Process Video
        run: |
            aria2c --conf-path=./aria2/aria2.conf "$(cat info/url.txt)"
            bash split.sh ./$(cat info/name.txt)/$(cat info/name.txt).mp4 2000000000 "-c copy"
            rm ./$(cat info/name.txt)/$(cat info/name.txt).mp4
            mv ./*-C/*-C*.mp4 .

      - name: Upload Video
        env:
          API_ID: ${{ secrets.API_ID }}
          API_HASH: ${{ secrets.API_HASH }}
        run: |
            openssl enc -aes128 -pbkdf2 -d -in tg_client.aes128 -out tg_client.session -pass env:API_HASH
            wget $(cat  info/poster.txt) -qO poster.jpg
            videos=(*.mp4)
            python3 uploader.py "@ccav_98" "$videos" "$(cat info/title.txt)"
            rm -rf ./$(cat info/name.txt) poster.jpg
            openssl enc -aes128 -pbkdf2 -in tg_client.session -out tg_client.aes128 -pass env:API_HASH && rm tg_client.session

      - name: Update repo
        env:
          ACTOR: ${{ github.actor }}
          REPO: ${{ github.repository }}
        run: |
           git config --local user.email "${ACTOR}@users.noreply.github.com"
           git config --local user.name "${ACTOR}"
           git add .
           git commit -m 'update' || exit 0
           git push origin main
          
      - name: Delete workflow runs
        uses: Mattraks/delete-workflow-runs@v2
        with:
          token: ${{ github.token }}
          repository: ${{ github.repository }}
          retain_days: 1
          keep_minimum_runs: 6
